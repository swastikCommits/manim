// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  image     String?
  password  String
  projects  Project[]
  jobs      Job[]
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id          String    @id @default(cuid())
  title       String
  description String?
  owner       User      @relation(fields: [ownerId], references: [id])
  ownerId     String
  jobs        Job[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Job {
  id          String     @id @default(cuid())
  prompt      String
  status      JobStatus  @default(QUEUED)
  videoUrl    String?
  scriptPath  String?
  error       String?

  project     Project    @relation(fields: [projectId], references: [id])
  projectId   String

  user        User?      @relation(fields: [userId], references: [id])
  userId      String?

  parentJob   Job?       @relation("JobParent", fields: [parentJobId], references: [id])
  parentJobId String?
  children    Job[]      @relation("JobParent")

  messages    Message[]

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  content   String
  job       Job      @relation(fields: [jobId], references: [id])
  jobId     String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
}

enum JobStatus {
  QUEUED
  PROCESSING
  COMPLETED
  FAILED
}